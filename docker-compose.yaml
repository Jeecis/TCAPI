services:
  app:
    build: .
    container_name: my_flask_app
    restart: always
    ports:
      - "5000:5000"  # Internal port Flask is using
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myapp.rule=Host(`www.pyapi.chudars.lv`)"
      - "traefik.http.routers.myapp.entrypoints=websecure"  # Use HTTPS entry point
      - "traefik.http.routers.myapp.tls=true"  # Enable TLS
      - "traefik.http.routers.myapp.tls.certresolver=le"  # Set certificate resolver to le (Let's Encrypt)
      - "traefik.http.services.myapp.loadbalancer.server.port=5000" 
    networks:
      - web

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"  # HTTPS entry point
      - "--certificatesresolvers.le.acme.tlschallenge=true"  # Use TLS-ALPN-01 challenge
      - "--certificatesresolvers.le.acme.email=jekabs777@example.com"  # Replace with your email
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"  # Path to store cert data
    ports:
      - "80:80"   # Redirects HTTP traffic
      - "443:443"  # HTTPS
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"  # Mount to store Let's Encrypt certificates
    networks:
      - web

networks:
  web:
